@using NJS_Chat.Helpers
@model List<Global.Message>

@{
    ViewBag.Title = "Message";
    Layout = null;
}

<html>
<head>
    <base target="_top" />
    <meta http-equiv="refresh" content="9">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Message</title>
    <link href="~/Content/Layout/one-column.css" rel="stylesheet" />
    <link href="~/Content/Plugins/UI.css" rel="stylesheet" />
    <link href="~/Content/Plugins/MessageUI.css" rel="stylesheet" />
    <link href="~/Content/Plugins/AdminUI.css" rel="stylesheet" />
    
</head>
<body style="overflow: auto;">
        <div id="main">
                <div class="wrap">

                    <div id="primary">
                        <div id="content" role="main">
                            <form class="pure-form">
                                <div class="bordered">
                                    @if (Model.Count > 0)
                                    {
                                        foreach (Global.Message message in Model)
                                        {
                                            if (message.To == "Everyone")
                                            {
                                                <p>
                                                    <div id="messageTitleHolder" class="adminMenu">
                                                        <span style="max-width: 100px">
                                                            <strong style="cursor: default">@message.From</strong>
                                                        </span>
                                                        @if (UserHelper.IsInGroup(Global.UserGroup.Administrator, Global.UserGroup.Moderator))
                                                        {
                                                            <ul>
                                                                <li>
                                                                    @Html.ActionLink("Kick User", "KickUser", "Admin", new { username = message.From }, null)
                                                                </li>
                                                                <li>
                                                                    @Html.ActionLink("Blacklist Username", "BlacklistUserName", "Admin", new { username = message.From }, null)
                                                                </li>
                                                                @if (UserHelper.IsInGroup(Global.UserGroup.Administrator))
                                                                {
                                                                    <li>
                                                                        @Html.ActionLink("Ban User", "BanUser", "Admin", new {username = message.From}, null)
                                                                    </li>
                                                                    <li>
                                                                        @Html.ActionLink("Promote User", "PromoteUser", "Admin", new {username = message.From}, null)
                                                                    </li>
                                                                    <li>
                                                                        @Html.ActionLink("Demote User", "DemoteUser", "Admin", new {username = message.From}, null)
                                                                    </li>
                                                                }
                                                            </ul>
                                                        }
                                                        <span style="font-size: 12px; color:#C7CACE">(@message.DateSent.ToLocalTime().ToString("t"))</span>
                                                    </div>
                                                    @Html.Raw(message.MessageBody.Replace(Environment.NewLine, "<div></div>"))
                                                </p>
                                            }
                                            else
                                            {
                                                if (message.From == Session["_Username"].ToString())
                                                {
                                                    <p><strong>[You -> @message.To]</strong> @Html.Raw(message.MessageBody.Replace(Environment.NewLine, "<div></div>"))</p>
                                                }
                                            }
                                            if (message.To == Session["_Username"].ToString())
                                            {
                                                <p><strong>[@message.From]</strong> @Html.Raw(message.MessageBody.Replace(Environment.NewLine, "<div></div>"))</p>
                                            }

                                        }
                                    }
                                    else
                                    {
                                        <strong> - No new messages -</strong>
                                    }
                                </div>
                            </form>
                        </div><!-- #content -->
                    </div><!-- #primary -->

                </div><!--.wrap-->
            </div><!--#main-->
</body>
</html>
